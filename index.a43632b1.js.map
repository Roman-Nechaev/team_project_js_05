{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,mCAGeC,EAAkBC,EAAKC,EAAKC,G,OAA5BC,EAAiBC,MAAAC,KAAAC,U,UAAjBH,I,OAAAA,EAAfI,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,EAAiCV,EAAKC,EAAKC,G,IACnCS,EAEEC,EACAC,E,yEAHFF,EAAM,uDAAkEG,OAAXd,EAAI,SAAoBc,OAAbb,EAAI,WAAiBa,OAARZ,EAAQ,iB,kBAE1Ea,EAAAC,QAAMC,IAAIN,G,OAA3BC,EAAQM,EAAAC,KACRN,EAAOD,EAASC,KACtBO,QAAQC,IAAI,aAA2BP,OAAdD,EAAKS,KAAK,MAAqBR,OAAjBD,EAAKU,IAAIC,UAChDJ,QAAQC,IAAI,gBAA4CP,OAA5BD,EAAKY,QAAQ,GAAGC,cAC5CN,QAAQC,IAAI,gBAA+BP,OAAfD,EAAKc,KAAKC,KAAK,O,kDAE1CR,QAAOC,IAAGH,EAAAW,I,2DATiBzB,MAAAC,KAAAC,U,UAajBwB,EAAmB9B,EAAKC,EAAKC,G,OAA7B6B,EAAkB3B,MAAAC,KAAAC,U,UAAlByB,I,OAAAA,EAAfxB,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,EAAkCV,EAAKC,EAAKC,G,IACpCS,EAEEC,EACAC,E,yEAHFF,EAAM,wDAAmEG,OAAXd,EAAI,SAAoBc,OAAbb,EAAI,WAAiBa,OAARZ,EAAQ,iB,kBAE3Ea,EAAAC,QAAMC,IAAIN,G,OAA3BC,EAAQM,EAAAC,KACRN,EAAOD,EAASC,KACtBO,QAAQC,IACN,4CAA+DP,OAAnBD,EAAKmB,KAAKV,KAAK,MAAsBR,OAAlBD,EAAKmB,KAAKR,UAEtDX,EAAKoB,KACbC,SAAQ,SAAAC,GACnB,IAAMC,EAAO,IAAIC,KAAmB,IAAdF,EAASG,IAC/BlB,QAAQC,IAAI,SAA6BP,OAApBsB,EAAKG,iBAC1BnB,QAAQC,IAAI,YAA4CP,OAAhCqB,EAASV,QAAQ,GAAGC,cAC5CN,QAAQC,IAAI,gBAAmCP,OAAnBqB,EAASR,KAAKC,KAAK,OAC/CR,QAAQC,IAAI,SAA6BP,OAApBqB,EAASK,KAAKC,MAAM,Q,sDAG3CrB,QAAQC,IAAGH,EAAAW,I,2DAjBkBzB,MAAAC,KAAAC,U,UAqBlBoC,I,OAAAC,EAAgBvC,MAAAC,KAAAC,U,UAAhBqC,I,OAAAA,EAAfpC,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUkC,EACA5C,EACAC,EACAC,E,2FAHiB2C,I,cAAjBD,EAAQ1B,EAAAC,KACRnB,EAAM4C,EAASE,OAAOC,SACtB9C,EAAM2C,EAASE,OAAOE,UACtB9C,EAAU,mC,SACVH,EAAkBC,EAAKC,EAAKC,G,wBAC5B4B,EAAmB9B,EAAKC,EAAKC,G,0DAEnCkB,QAAQC,IAAGH,EAAAW,I,2DATgBzB,MAAAC,KAAAC,U,CAa/B,SAASuC,IACP,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,E,IAItDT,ICvDAA,IACAtB,QAAQC,IAAIqB,E","sources":["src/partials/weather/fetchWeatherData.js","src/partials/weather/weather.js"],"sourcesContent":["import axios from 'axios';\nexport { fetchWeatherData };\n\nasync function getCurrentWeather(lat, lon, api_key) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric`;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    console.log(`Location: ${data.name}, ${data.sys.country}`);\n    console.log(`Weather now: ${data.weather[0].description}`);\n    console.log(`Temperature: ${data.main.temp}°C`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getWeatherForecast(lat, lon, api_key) {\n  const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric`;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    console.log(\n      `5-day weather forecast for the location: ${data.city.name}, ${data.city.country}`\n    );\n    const forecastList = data.list;\n    forecastList.forEach(forecast => {\n      const date = new Date(forecast.dt * 1000);\n      console.log(`Date: ${date.toDateString()}`);\n      console.log(`Weather: ${forecast.weather[0].description}`);\n      console.log(`Temperature: ${forecast.main.temp}°C`);\n      console.log(`Wind: ${forecast.wind.speed} m/s`);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchWeatherData() {\n  try {\n    const position = await getPosition();\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const api_key = 'ba95449c69063d2989b1d45f265b0f98';\n    await getCurrentWeather(lat, lon, api_key);\n    await getWeatherForecast(lat, lon, api_key);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction getPosition() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nfetchWeatherData();\n","import { fetchWeatherData } from './fetchWeatherData';\nfetchWeatherData();\nconsole.log(fetchWeatherData);\n"],"names":["$bpxeT","parcelRequire","$4788e5de1230cb42$var$getCurrentWeather","lat","lon","api_key","$4788e5de1230cb42$var$_getCurrentWeather","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","url","response","data","concat","$dIxxU","default","get","_ctx","sent","console","log","name","sys","country","weather","description","main","temp","t0","$4788e5de1230cb42$var$getWeatherForecast","$4788e5de1230cb42$var$_getWeatherForecast","city","list","forEach","forecast","date","Date","dt","toDateString","wind","speed","$4788e5de1230cb42$export$ef28063cb779bdf6","$4788e5de1230cb42$var$_fetchWeatherData","position","$4788e5de1230cb42$var$getPosition","coords","latitude","longitude","Promise","resolve","reject","navigator","geolocation","getCurrentPosition"],"version":3,"file":"index.a43632b1.js.map"}